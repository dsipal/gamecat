function AccountValidator(){this.fields={username:$("#user-tf"),password:$("#pass-tf"),passwordV:$("#pass-verify-tf"),name:$("#name-tf"),email:$("#email-tf"),country:$("#country-list"),referrer:$("#ref_by"),email_optin:$("#email-optin"),terms_conditions:$("#terms-conditions")},this.errs=[],this.alert=$(".modal-form-errors"),this.alert.modal({show:!1,keyboard:!0,backdrop:!0}),this.validateUsername=function(s){return new RegExp("^(?!.*__.*)(?!.*\\.\\..*)[a-z0-9_.]+$").test(s)},this.validateName=function(s){return s.length>=3},this.validatePassword=function(s,e,r,t){let i=new RegExp("\\S*(\\S*([a-zA-Z]\\S*[0-9])|([0-9]\\S*[a-zA-Z]))\\S*");s.length<6?t("Please ensure your password is at least 6 characters long."):r===s?t("Please do not use your username as your password."):s!==e?t("Your passwords are not the same."):i.test(s)?t(null):t("Please ensure your password contains letters and numbers.")},this.validateEmail=function(){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(this.fields.email.val())},this.validateCountry=function(){return" "!==this.fields.country},this.validateTermsConditions=function(){return null!==this.fields.terms_conditions}}AccountValidator.prototype.showInvalidEmail=function(){this.fields.email.addClass("error"),this.errs.push("That email address is already in use.")},AccountValidator.prototype.showInvalidUserName=function(){this.fields.username.addClass("error"),this.errs.push("That username is already in use.")},AccountValidator.prototype.showInvalidRefName=function(){this.fields.referrer.addClass("error"),this.errs.push("This referral is not valid.")},AccountValidator.prototype.showDispoEmail=function(){this.fields.email.addClass("error"),this.errs.push("This email is from a disposable email provider.")},AccountValidator.prototype.showAcceptTC=function(){this.fields.terms_conditions.addClass("error"),this.errs.push("You must accept the terms and conditions.")},AccountValidator.prototype.validateForm=function(){for(let s in this.fields)this.fields[s].removeClass("error");return this.validateUsername(this.fields.username.val())||(this.fields.username.addClass("error"),this.errs.push("Please enter a valid username.")),this.validateEmail(this.fields.email.val())||(this.fields.email.addClass("error"),this.errs.push("Please enter a valid email.")),this.validateCountry(this.fields.country.val())||(this.fields.country.addClass("error"),this.errs.push("Please select a country.")),this.validateTermsConditions(this.fields.terms_conditions.val())||(this.fields.terms_conditions.addClass("error"),this.errs.push("You must accept our terms and conditions.")),this.validatePassword(this.fields.password.val(),this.fields.passwordV.val(),this.fields.username.val(),function(s){s&&this.errs.push(s)}),this.errs.length&&this.showErrors(),0===this.errs.length},AccountValidator.prototype.showErrors=function(){console.log(this.errs),$(".modal-form-errors .modal-body p").text("Please correct the following problems: ");let s=$(".modal-form-errors .modal-body ul");console.log(s),s.empty();for(let e in this.errs)s.append("<li>"+this.errs[e]+"</li>");this.alert.modal("show"),this.errs=[]};